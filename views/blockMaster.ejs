<% layout('/layout/boilerplate') %>
      <!-- The main content -->
      <div class="main-content">
        <form action="/fairdesk/form/block" method="post" class="needs-validation" autocomplete="off" novalidate>
          <div class="span-full form-heading">
            <h1>Block Master</h1>
          </div>

          <div class="span-four">
            <label for="block-date">Date</label>
            <input type="date" id="block-date" class="form-control" name="blockDate" required />
          </div>          
           <div id="client-name-div" class="span-five">
            <label for="block-machine-type">Machine Type</label>
            <!-- <input type="number" name="blockMachineType" id="block-machine-type" class="form-control" placeholder="Enter Machine Type" required> -->
            <select name="blockMachineType" id="block-machine-type">
              <option value="" selected disabled hidden>Select</option>
              <option value="ROTTARY">ROTTARY</option>
              <option value="FLATBED">FLATBED</option>
            </select>
          </div>
           <div id="client-name-div" class="span-five">
            <label for="block-machine-no">Machine No</label>
            <input type="text" name="blockMachineNo" id="block-machine-no" class="form-control" placeholder="Enter Machine No" required>
          </div>
           <div class="span-four">
            <label for="block-Make">Block Make</label>
            <input type="text" name="blockMake" id="block-no" class="form-control" placeholder="Enter Block No" required>
          </div> 
           <div class="span-five">
            <label for="block-artwork-no">Artwork No</label>
            <input type="text" name="blockArtworkNo" id="block-artwork-no" class="form-control" placeholder="Enter Artwork No" required>
          </div> 
          <div class="span-four">
            <label for="block-no">Block No</label>
            <input type="text" name="blockNo" id="block-no" class="form-control" placeholder="Enter Block No" required>
          </div>                    
          <div id="client-location-div" class="span-five">
            <label for="block-version">Version</label>
            <input type="text" id="block-version" class="form-control" name="blockVersion" placeholder="Enter Version" required />
          </div>

          <div class="span-full form-subheading">
            <h1></h1>
          </div>

          <div class="span-four">
            <label for="block-width">Width</label>
            <input type="text" id="block-width" class="form-control" name="blockWidth" placeholder="Enter Width" required />
          </div>
          <div class="span-four">
            <label for="block-height">Height</label>
            <input type="text" id="block-height" class="form-control" name="blockHeight" placeholder="Enter Height" required />
          </div>
          <div class="span-three">
            <label for="block-gap">Gap</label>
            <input type="text" id="block-gap" class="form-control" name="blockGap" placeholder="Enter gap" required />
          </div>
          <div class="span-four">
            <label for="repeat-pass">RePass</label>
            <input type="text" id="repeat-pass" class="form-control" name="blockRepass" placeholder="Enter Repass" required />
          </div>           

          <!-- <div class="span-four">
            <label for="block-pap-size">Paper Size</label>
            <input type="text" id="block-pap-size" class="form-control" name="blockPapSize" placeholder="Enter Paper Size" required />
          </div>
          
          <div id="paper-code-div" class="span-five">
            <label for="block-pap-code">Paper Code</label>
            <input type="text" id="block-pap-code" class="form-control" name="blockPapCode" placeholder="Enter Paper Code" required />
          </div>           -->

          <div class="span-four">
            <label for="block-status">Status</label>
            <!-- <input type="text" id="block-status" class="form-control" name="blockStatus" placeholder="Enter Status" required /> -->
             <select name="blockStatus" id="block-status">
                <option value="" selected disabled hidden>Select</option>
                <option value="ACTIVE">ACTIVE</option>
                <option value="INACTIVE">INACTIVE</option>
             </select>
          </div>

          <div class="span-four">
            <label for="block-owned-by">Owned By</label>
            <input type="text" id="block-owned-by" class="form-control" name="blockOwnedBy" placeholder="Enter Owned By" required />
          </div>         

          <div class="span-half" style="grid-column: span 9;">
            <label for="block-remark">Remark</label>
            <input type="text" id="block-remark" class="form-control" name="blockRemark" placeholder="Enter Remark" required />
          </div>

          <div class="span-full form-subheading">
            <h1></h1>
          </div>
          
           <div class="color-count span-half" style="grid-column: span 32;">
            <label>Color</label>
            <div class="color-count" style="width: 100%; display: flex; justify-content: space-between; gap: 10px;">
            <input type="text" id="front-color" class="form-control" name="blockFrontColor" placeholder="Enter Front"/>              
            <input type="text" id="back-color" class="form-control" name="blockBackColor" placeholder="Enter Back" />
            </div>`

            </div>
              <div class="color-headings" style="margin-bottom: 0px; grid-column: span 32; background-color: #1a1a2e; color: white; padding: 10px; border-radius: 5px; display: flex; justify-content: space-between; align-items: center;"> 
                <span style="flex: 1; font-size: 16px; font-weight: 600; padding-left: 15px;">Pantone Code</span>
                <span style="flex: 1; font-size: 16px; font-weight: 600; padding-left: 15px;">Color Name</span>
                <span style="flex: 1; font-size: 16px; font-weight: 600; padding-left: 15px;">Anilox No</span>
              </div>            

          <div class="span-full form-subheading">
            <h1>Back</h1>
          </div>         
          <div id="back-clr-details" style="grid-column: span 32;">
              <div class="color-headings" style="margin-bottom: 10px; grid-column: span 32; padding: 10px; border-radius: 5px; border: 2px solid #1a1a2e; display: flex; justify-content: space-between; align-items: center; gap: 10px;">
                <input type="text" class="form-control" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly />
                <input type="text" class="form-control" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly />
                <input type="text" class="form-control" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly />
              </div>
          </div>

          <div class="span-full form-subheading">
            <h1>Front</h1>
          </div>
          <div id="front-clr-details" style="grid-column: span 32;">
              <div class="color-headings" style="margin-bottom: 10px; grid-column: span 32; padding: 10px; border-radius: 5px; border: 2px solid #1a1a2e; display: flex; justify-content: space-between; align-items: center; gap: 10px;">
                <input type="text" id="pantone-code" class="form-control" name="pantoneCode" placeholder="Enter Pantone Code" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly />
                <input type="text" id="pantone-code" class="form-control" name="pantoneCode" placeholder="Enter Color Name" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly />
                <input type="text" id="pantone-code" class="form-control" name="pantoneCode" placeholder="Enter Anilox No" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly />
              </div>
          </div>

          <div class="span-full form-subheading">
            <h1></h1>
          </div>            
        
          <div id class="span-dual">
            <label for="varnish">Varnish</label>
             <select name="blockVarnish" id="varnish">
              <option value="NO">NO</option>
              <option value="FULL">FULL</option>
              <option value="WINDOW">WINDOW</option>
              <option value="SPOT">SPOT</option>
             </select>
          </div>

          <div class="span-dual">
            <label for="block-foil-no">No of Foil</label>
            <input type="text" id="block-foil-no" class="form-control" name="blockFoilNo" value="0" placeholder="Enter No of Foil" required />
          </div>          

          <div class="span-dual">
            <label for="block-lamination">Lamination</label>
            <select name="blockLamination" id="block-lamination">
              <option value="" selected disabled hidden>Select</option>
              <option value="YES">YES</option>
              <option value="NO">NO</option>
             </select>
          </div>

          <div class="span-dual">
            <label for="block-plate-thickness">Plate Thickness</label>
            <select name="blockPlateThickness" id="block-plate-thickness">
              <option value="" selected disabled hidden>Select</option>
              <option value="1.7">1.7</option>
              <option value="2.5">2.5</option>
             </select>
          </div>
          
          <input type="hidden" name="userId" id="user-id">          

          <div class="btn-grp span-full">
            <button type="submit">Save Block Master</button>
          </div>          
        </form>
      </div>
<script>
  window.addEventListener('DOMContentLoaded', () => {
    const dateInput = document.getElementById('block-date');
    const today = new Date();

    const yyyy = today.getFullYear();
    const mm = String(today.getMonth() + 1).padStart(2, '0'); // Months are zero-based
    const dd = String(today.getDate()).padStart(2, '0');

    dateInput.value = `${yyyy}-${mm}-${dd}`;
  });

document.getElementById('front-color').addEventListener('input', function() {
    const count = parseInt(this.value) || 0;
    const container = document.getElementById('front-clr-details');
    
    // Clear existing content
    container.innerHTML = '';
    
    if (count <= 0 || isNaN(count)) {
        // Create empty state div
        const emptyDiv = document.createElement('div');
        emptyDiv.className = 'color-headings';
        emptyDiv.style.cssText = 'margin-bottom: 10px; grid-column: span 32; padding: 10px; border-radius: 5px; border: 2px solid #1a1a2e; display: flex; justify-content: space-between; align-items: center; gap: 10px;';
        
        emptyDiv.innerHTML = `
            <input type="text" class="form-control" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly>
            <input type="text" class="form-control" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly>
            <input type="text" class="form-control" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly>
        `;
        container.appendChild(emptyDiv);
    } else {
        // Create new divs based on the input count
        for (let i = 0; i < count; i++) {
            const div = document.createElement('div');
            div.className = 'color-headings';
            div.style.cssText = 'margin-bottom: 10px; grid-column: span 32; padding: 10px; border-radius: 5px; border: 2px solid #1a1a2e; display: flex; justify-content: space-between; align-items: center; gap: 10px;';
            
            div.innerHTML = `
                <h4 style="margin: 0;">${i + 1}</h4>
                <input type="text" name="frontColDet[${i}][pantoneCode]" class="form-control" placeholder="Pantone Code" style="flex: 1; border: 1px solid #1a1a2e;">
                <input type="text" name="frontColDet[${i}][colorName]" class="form-control" placeholder="Color Name" style="flex: 1; border: 1px solid #1a1a2e;">
                <input type="text" name="frontColDet[${i}][aniloxNo]" class="form-control" placeholder="Anilox No" style="flex: 1; border: 1px solid #1a1a2e;">
            `;
            container.appendChild(div);
        }
    }
});

// Initialize on page load
window.addEventListener('DOMContentLoaded', () => {
    document.getElementById('front-color').dispatchEvent(new Event('input'));
});

document.getElementById('back-color').addEventListener('input', function() {
    const count = parseInt(this.value) || 0;
    const container = document.getElementById('back-clr-details');
    
    // Clear existing content
    container.innerHTML = '';
    
    if (count <= 0 || isNaN(count)) {
        // Create empty state div
        const emptyDiv = document.createElement('div');
        emptyDiv.className = 'color-headings';
        emptyDiv.style.cssText = 'margin-bottom: 10px; grid-column: span 32; padding: 10px; border-radius: 5px; border: 2px solid #1a1a2e; display: flex; justify-content: space-between; align-items: center; gap: 10px;';
        
        emptyDiv.innerHTML = `
            <input type="text" class="form-control" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly>
            <input type="text" class="form-control" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly>
            <input type="text" class="form-control" value="-" style="flex: 1; border: 1px solid #1a1a2e;" readonly>
        `;
        container.appendChild(emptyDiv);
    } else {
        // Create new divs based on the input count
        for (let i = 0; i < count; i++) {
            const div = document.createElement('div');
            div.className = 'color-headings';
            div.style.cssText = 'margin-bottom: 10px; grid-column: span 32; padding: 10px; border-radius: 5px; border: 2px solid #1a1a2e; display: flex; justify-content: space-between; align-items: center; gap: 10px;';
            
            div.innerHTML = `
                <h4 style="margin: 0;">${i + 1}</h4>
                <input type="text" name="backColDet[${i}][pantoneCode]" class="form-control" placeholder="Pantone Code" style="flex: 1; border: 1px solid #1a1a2e;">
                <input type="text" name="backColDet[${i}][colorName]" class="form-control" placeholder="Color Name" style="flex: 1; border: 1px solid #1a1a2e;">
                <input type="text" name="backColDet[${i}][aniloxNo]" class="form-control" placeholder="Anilox No" style="flex: 1; border: 1px solid #1a1a2e;">
            `;
            container.appendChild(div);
        }
    }
});

// Initialize on page load
window.addEventListener('DOMContentLoaded', () => {
    document.getElementById('back-color').dispatchEvent(new Event('input'));
});
</script>